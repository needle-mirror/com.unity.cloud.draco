{"name":"com.unity.cloud.draco","version":"5.3.0","displayName":"Draco for Unity","description":"Use Draco for Unity to apply Draco compression to meshes, import Draco files and load Draco data at runtime. Draco is an open-source library for compressing and decompressing 3D geometric meshes and point clouds. It is intended to improve the storage and transmission of 3D graphics.","unity":"2021.3","dependencies":{"com.unity.burst":"1.8.24","com.unity.mathematics":"1.2.6"},"keywords":["mesh","transcode","compress","decompress","encode","decode","google","draco"],"samples":[{"displayName":"Draco Decoding","description":"Demonstrates how to decode Draco data at runtime","path":"Samples~/Decode"},{"displayName":"Draco Encoding","description":"Demonstrates how to encode Draco data at runtime","path":"Samples~/Encode"},{"displayName":"Scene/GameObject Encoding/Decoding via Menu","description":"Encode Meshes, GameObjects or entire Scenes via the Tools and Assets menu and have them decoded when the scene loads.","path":"Samples~/SceneEncodeDecode"}],"relatedPackages":{"com.unity.cloud.draco.tests":"0.0.0"},"unityRelease":"46f1","repository":{"revision":"319aeed9e83fe3c126c9b1f1768bef8c56ac2fb1","type":"git","url":"https://github.cds.internal.unity3d.com/unity/com.unity.cloud.draco.git"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.cloud.draco@5.3/manual/index.html","_upm":{"changelog":"### Added\n- Embedded Linux support\n- Release process documentation.\n- [EditorConfig](https://editorconfig.org/) for keeping a consistent code-style.\n- (CI) Raspberry Pi runtime tests.\n- (Test) Package coherence tests.\n- (Test) Bone-weight decoding tests.\n- (Test) Importer tests.\n\n### Changed\n- Dependency version changes (to match the recommended version in Unity 2021 xLTS):\n  - com.unity.mathematics decreased to 1.2.6.\n  - com.unity.burst increased to 1.8.24.\n- (CI) Code format check is performed by dotnet format now.\n\n### Fixed\n- Removed warning about Android binaries not being 16kB-aligned.\n- (CI) Apply code format checks on tests package as well.\n- Required Unity version in the documentation.\n- Mesh bounds are consistently applied.\n- Bone weight data is consistently applied and disposed.\n- Don't attempt to recalculate normals and tangents on point clouds."}}