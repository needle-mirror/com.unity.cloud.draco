{"name":"com.unity.cloud.draco","version":"5.2.0","displayName":"Draco for Unity","description":"Use Draco for Unity to apply Draco compression to meshes, import Draco files and load Draco data at runtime. Draco is an open-source library for compressing and decompressing 3D geometric meshes and point clouds. It is intended to improve the storage and transmission of 3D graphics.","unity":"2021.3","dependencies":{"com.unity.burst":"1.8.11","com.unity.mathematics":"1.3.1"},"keywords":["mesh","transcode","compress","decompress","encode","decode","google","draco"],"samples":[{"displayName":"Draco Decoding","description":"Demonstrates how to decode Draco data at runtime","path":"Samples~/Decode"},{"displayName":"Draco Encoding","description":"Demonstrates how to encode Draco data at runtime","path":"Samples~/Encode"},{"displayName":"Scene/GameObject Encoding/Decoding via Menu","description":"Encode Meshes, GameObjects or entire Scenes via the Tools and Assets menu and have them decoded when the scene loads.","path":"Samples~/SceneEncodeDecode"}],"unityRelease":"46f1","repository":{"revision":"c6a4068f3cf98b2b79093166e718a20e1964bf8b","type":"git","url":"https://github.cds.internal.unity3d.com/unity/com.unity.cloud.draco.git"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.cloud.draco@5.2/manual/index.html","_upm":{"changelog":"### Added\n- Loading Draco data from [NativeArray&lt;byte&gt;.ReadOnly](xref:Unity.Collections.NativeArray`1.ReadOnly). This makes it easier to load KTX data from existing, native memory directly without the need to create a copy in managed memory (e.g. by using [DownloadHandler.GetNativeData](xref:UnityEngine.Networking.DownloadHandler.GetNativeData) or [ConvertExistingDataToNativeArray](xref:Unity.Collections.LowLevel.Unsafe.NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray(System.Void*,System.Int32,Unity.Collections.Allocator))).\n  - [DecodeMesh(MeshData, ReadOnly)](xref:Draco.DracoDecoder.DecodeMesh(UnityEngine.Mesh.MeshData,Unity.Collections.NativeArray{System.Byte}.ReadOnly))\n  - [DecodeMesh(MeshData, ReadOnly, DecodeSettings)](xref:Draco.DracoDecoder.DecodeMesh(UnityEngine.Mesh.MeshData,Unity.Collections.NativeArray{System.Byte}.ReadOnly,Draco.DecodeSettings))\n  - [DecodeMesh(MeshData, ReadOnly, DecodeSettings, Dictionary&lt;VertexAttribute, int&gt;)](xref:Draco.DracoDecoder.DecodeMesh(UnityEngine.Mesh.MeshData,Unity.Collections.NativeArray{System.Byte}.ReadOnly,Draco.DecodeSettings,Dictionary{UnityEngine.Rendering.VertexAttribute,System.Int32}))\n  - [DecodeMesh(ReadOnly)](xref:Draco.DracoDecoder.DecodeMesh(Unity.Collections.NativeArray{System.Byte}.ReadOnly))\n  - [DecodeMesh(ReadOnly, DecodeSettings)](xref:Draco.DracoDecoder.DecodeMesh(Unity.Collections.NativeArray{System.Byte}.ReadOnly,Draco.DecodeSettings))\n  - [DecodeMesh(ReadOnly, DecodeSettings, Dictionary&lt;VertexAttribute, int&gt;)](xref:Draco.DracoDecoder.DecodeMesh(Unity.Collections.NativeArray{System.Byte}.ReadOnly,Draco.DecodeSettings,Dictionary{UnityEngine.Rendering.VertexAttribute,System.Int32}))\n- Test project `DracoText`\n\n### Changed\n- Increased minimum required Unity 2021 xLTS (2021.3.46f1).\n- Changed source code repository structure to [monorepo](https://en.wikipedia.org/wiki/Monorepo).\n- Updated Unity Draco binaries to version 3.3.0 (based on draco 1.5.7).\n\n### Deprecated\n- Decode methods that accept NativeSlice.\n  - [DecodeMesh(NativeSlice&lt;byte&gt;)](xref:Draco.DracoDecoder.DecodeMesh(Unity.Collections.NativeSlice{System.Byte}))\n  - [DecodeMesh(NativeSlice&lt;byte&gt;, DecodeSettings)](xref:Draco.DracoDecoder.DecodeMesh(Unity.Collections.NativeSlice{System.Byte},Draco.DecodeSettings))\n  - [DecodeMesh(NativeSlice&lt;byte&gt;, DecodeSettings, Dictionary&lt;VertexAttribute, int&gt;)](xref:Draco.DracoDecoder.DecodeMesh(Unity.Collections.NativeSlice{System.Byte},Draco.DecodeSettings,Dictionary{UnityEngine.Rendering.VertexAttribute,System.Int32}))\n  - [DecodeMesh(MeshData, NativeSlice&lt;byte&gt;)](xref:Draco.DracoDecoder.DecodeMesh(UnityEngine.Mesh.MeshData,Unity.Collections.NativeSlice{System.Byte}))\n  - [DecodeMesh(MeshData, NativeSlice&lt;byte&gt;, DecodeSettings)](xref:Draco.DracoDecoder.DecodeMesh(UnityEngine.Mesh.MeshData,Unity.Collections.NativeSlice{System.Byte},Draco.DecodeSettings))\n  - [DecodeMesh(MeshData, NativeSlice&lt;byte&gt;, DecodeSettings, Dictionary&lt;VertexAttribute, int&gt;)](xref:Draco.DracoDecoder.DecodeMesh(UnityEngine.Mesh.MeshData,Unity.Collections.NativeSlice{System.Byte},Draco.DecodeSettings,Dictionary{UnityEngine.Rendering.VertexAttribute,System.Int32}))\n\n### Fixed\n- Android binary is 16kB page size compatible (fixes [#79](https://github.com/atteneder/DracoUnity/issues/79)).\n- Linux binary is now compatible with Ubuntu 20.04.\n- Multiple XML-documentation issues.\n- (Test) Properly dispose UnityWebRequests used in unit tests.\n\n### Removed\n- Support for Unity 2020 LTS and 2021 LTS (Note: 2021 xLTS is still supported).\n- Prevention of automatic legacy WebGL sub-package removal via `DISABLE_SUB_PACKAGE_LOAD` environment variable (were required for Unity 2020 timeouts in CI).\n- (CI) SonarQube scan job."}}